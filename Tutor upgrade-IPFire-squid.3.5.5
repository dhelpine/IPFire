IPFIRE upgrade squid 3.5.5
1. copy kan file "s355.tar.gz" (https://drive.google.com/open?id=0B3i0cwEYlyL-VUJJSl9jeHIyakk&authuser=0)  ke /root via winscp
2. via putty, menuju ke /root dengan cd /root
3. /etc/init.d/squid stop
4. tar -xvf squid-3.5.5-for-ipfire.tar.gz -C /
5. hapus cache di /var/log/cache dengan winscp
6. http://pastebin.com/raw.php?i=JjAUXmZK --->squid.conf.pre.local
===================================================================================
http_port 192.168.21.212:3128 tproxy
https_port 192.168.21.212:3129 tproxy ssl-bump generate-host-certificates=on dynamic_cert_mem_cache_size=4MB cert=/etc/squid/certs/squid.pem key=/etc/squid/certs/squid.key

reload_into_ims on
refresh_all_ims on
maximum_object_size_in_memory 0 KB

strip_query_terms off
cache_swap_high 98
cache_swap_low 95
qos_flows local-hit=0x30
qos_flows sibling-hit=0x30
qos_flows parent-hit=0x30
dns_nameservers 208.67.222.222 208.67.220.220 8.8.8.8 8.8.4.4

### semua acl
acl video url_regex -i ^http.*video.*
acl range url_regex -i ^http.*range.*
acl google url_regex -i (googlevideo.com|www.youtube.com)
acl iphone browser -i regexp (iPhone|iPad)
acl BB browser -i regexp (BlackBerry|PlayBook)
acl Winphone browser -i regexp (Windows.*Phone|Trident|IEMobile)
acl Android browser -i regexp Android
acl rolnone url_regex -i ^https?\:\/\/.*\/th\/patch\/.*
acl rolnone url_regex -i ^http.*garena.*
acl allurl url_regex -i ^http.*
acl spliceserver ssl::server_name "/etc/squid/splicesaja.txt"
acl ipbypass dst "/etc/squid/ipbypass.txt"
acl httptomiss http_status 302
acl httptomiss http_status 301
acl mimetomiss rep_mime_type -i mime-type ^text/html
acl step1 at_step SslBump1
acl step2 at_step SslBump2
acl step3 at_step SslBump3
acl getmethod method GET

quick_abort_min 0 KB
quick_abort_max 0 KB
quick_abort_pct 100
range_offset_limit none rolnone
range_offset_limit 1 KB !rolnone

request_header_access User-Agent deny google !iphone !BB !Winphone !Android
request_header_replace User-Agent Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)

http_access deny video !range

always_direct allow all
ssl_bump splice localhost
ssl_bump splice ipbypass
ssl_bump splice spliceserver
ssl_bump peek step1 all
ssl_bump bump step2 all
ssl_bump splice step3 all
sslproxy_cert_error allow all
sslproxy_flags DONT_VERIFY_PEER

sslcrtd_program /usr/lib/squid/ssl_crtd -s /var/ipfire/ssl_db -M 4MB
sslcrtd_children 2000

cache deny localhost

store_id_program /etc/squid/storeid.pl
store_id_children 2000
store_id_access deny !getmethod
store_id_access allow allurl
store_id_access deny all

store_miss deny httptomiss
send_hit deny httptomiss
store_miss deny mimetomiss
send_hit deny mimetomiss

refresh_pattern -i ^http.*pc-mikrotik.* 432000 100% 432000 override-expire override-lastmod ignore-reload ignore-no-cache ignore-no-store ignore-private ignore-auth ignore-must-revalidate store-stale
refresh_pattern . 0 100% 432000 override-expire override-lastmod ignore-no-cache ignore-no-store ignore-private ignore-auth ignore-must-revalidate

max_stale 60 days
===================================================================================

7. http://pastebin.com/raw.php?i=0Mhu9JAD ---> storeid.pl
===================================================================================
#!/usr/bin/perl

$|=1;
while (<>) {
@X = split;
if ($X[0] =~ m/^https?\:\/\/.*/) {
	$x = $X[0]; 
	$_ = $X[0];
	$u = $X[0];
} else { 
	$x = $X[1]; 
	$_ = $X[1];
	$u = $X[1];
}


#ads youtube
if ($x=~ m/^https?\:\/\/.*youtube.*api.*stats.*ads.*/){
    @content_v = m/[&?]content_v\=([^\&\s]*)/;
    @cpn = m/[%&?\/](cpn[%&=\/][^\&\s\/]*)/;
    unless (-e "/tmp/@cpn"){
    open FILE, ">/tmp/@cpn";
    print FILE "id=@content_v";
    close FILE;
    }
    $out="ERR";

#tracking youtube
} elsif ($x=~ m/^https?\:\/\/.*youtube.*(ptracking|set_awesome).*/){
    @video_id = m/[&?]video_id\=([^\&\s]*)/;
    @cpn = m/[%&?\/](cpn[%&=\/][^\&\s\/]*)/;
    unless (-e "/tmp/@cpn"){
    open FILE, ">/tmp/@cpn";
    print FILE "id=@video_id";
    close FILE;
    }
    $out="ERR";
 
 
#stream_204 youtube
} elsif ($x=~ m/^https?\:\/\/.*youtube.*(stream_204|watchtime|qoe|atr).*/){
    @docid = m/[&?]docid\=([^\&\s]*)/;
    @cpn = m/[%&?\/](cpn[%&=\/][^\&\s\/]*)/;
    unless (-e "/tmp/@cpn"){
    open FILE, ">/tmp/@cpn";
    print FILE "id=@docid";
    close FILE;
    }
    $out="ERR";
 
#player_204 youtube
} elsif ($x=~ m/^https?\:\/\/.*youtube.*player_204.*/){
    @v = m/[&?]v\=([^\&\s]*)/;
    @cpn = m/[%&?\/](cpn[%&=\/][^\&\s\/]*)/;
    unless (-e "/tmp/@cpn"){
    open FILE, ">/tmp/@cpn";
    print FILE "id=@v";
    close FILE;
    }
    $out="ERR";

#youtube
} elsif ($x=~ m/^https?\:\/\/.*(youtube|googlevideo).*videoplayback.*title.*/){
    @title      = m/[%&?\/](title[%&=\/][^\&\s\/]*)/;
    @itag      = m/[%&?\/](itag[%&=\/][^\&\s\/]*)/;
    @range   = m/[%&?\/](range[%&=\/][^\&\s\/]*)/;
    $out="OK store-id=http://pc-mikrotik/youtube/@itag@title@range";
 
#youtube
} elsif ($x=~ m/^https?\:\/\/.*(youtube|googlevideo).*videoplayback.*/){
    @cpn      = m/[%&?\/](cpn[%&=\/][^\&\s\/]*)/;
    @id      = m/[%&?\/](id[%&=\/][^\&\s\/]*)/;
    @itag      = m/[%&?\/](itag[%&=\/][^\&\s\/]*)/;
    @range  = m/[%&?\/](range[%&=\/][^\&\s\/]*)/;
    @slices = m/[%&?\/](slices[%&=\/][^\&\s\/]*)/;
    @mime     = m/[%&?\/](mime[%&=\/][^\&\s\/]*)/;
    if (defined(@cpn[0])){
        if (-e "/tmp/@cpn"){
        open FILE, "/tmp/@cpn";
        @id = <FILE>;
        close FILE;}
    }
    $out="OK store-id=http://pc-mikrotik/youtube/@id@itag@mime@range@slices";



#utmgif
} elsif ($x=~ m/^https?\:\/\/.*utm.gif.*/) {
    $out="OK store-id=http://pc-mikrotik/__utm.gif";

#reverbnation
} elsif ($x=~ m/^https?\:\/\/c2lo\.reverbnation\.com\/audio_player\/ec_stream_song\/(.*)\?.*/) {
    $out="OK store-id=http://pc-mikrotik/reverbnation/" . $1;
 
#playstore
} elsif ($x=~ m/^https?\:\/\/.*\.c\.android\.clients\.google\.com\/market\/GetBinary\/GetBinary\/(.*\/.*)\?.*/) {
    $out="OK store-id=http://pc-mikrotik/android/market/" . $1;


#filehost
} elsif ($x=~ m/^https?\:\/\/.*datafilehost.*\/get\.php.*file\=(.*)/) {
    $out="OK store-id=http://pc-mikrotik/datafilehost/" . $1;


#speedtest
} elsif ($x=~ m/^https?\:\/\/.*(speedtest|espeed).*\/(.*\.(jpg|txt|png|bmp)).*/) {
    $out="OK store-id=http://pc-mikrotik/speedtest/" . $2;


#filehippo
} elsif ($x=~ m/^https?\:\/\/.*\.filehippo\.com\/.*\/(.*\/.*)/) {
    $out="OK store-id=http://pc-mikrotik/filehippo/" . $1;


#4shared preview.mp3
} elsif ($x=~ m/^https?\:\/\/.*\.4shared\.com\/.*\/(.*\/.*)\/dlink.*preview.mp3/) {
    $out="OK store-id=http://pc-mikrotik/4shared/preview/" . $1;

#4shared
} elsif ($x=~ m/^https?\:\/\/.*\.4shared\.com\/download\/(.*\/.*)\?tsid.*/) {
    $out="OK store-id=http://pc-mikrotik/4shared/download/" . $1;

#steampowered dota 2
} elsif ($x=~ m/^https?\:\/\/(media|valve).*steampowered.*\/(client|depot)\/(.*)/) {
    $out="OK store-id=http://" . $1 . "/steampowered/" . $2 . "/" . $3;

#all url https store as http
} elsif ($x=~ m/^https\:\/\/(.*)/) {
    $out="OK store-id=http://" . $1;


} else {
$out="ERR";
}

if ($X[0] =~ m/^https?\:\/\/.*/) {
	print "$out\n";
} else {
	print $X[0] . " " . "$out\n";
}
}
===================================================================================

8. http://pastebin.com/raw.php?i=r5EtgQPE ---> splicesaja.txt
===================================================================================
ib.bri.co.id
95.211.61.134
74.82.91.84
110.92.28.161
94.236.124.241
94.236.46.101
===================================================================================

9. via GUI browser ---> ip-proxy:81 ---> save
10. reboot IPFIRE
